$date
	Wed Feb  3 13:04:26 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module xor_32bit_test $end
$var wire 32 ! y [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & y [31:0] $end
$scope module t0 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var reg 1 ) y $end
$upscope $end
$scope module t1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var reg 1 , y $end
$upscope $end
$scope module t10 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var reg 1 / y $end
$upscope $end
$scope module t11 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var reg 1 2 y $end
$upscope $end
$scope module t12 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var reg 1 5 y $end
$upscope $end
$scope module t13 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var reg 1 8 y $end
$upscope $end
$scope module t14 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var reg 1 ; y $end
$upscope $end
$scope module t15 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var reg 1 > y $end
$upscope $end
$scope module t16 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var reg 1 A y $end
$upscope $end
$scope module t17 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var reg 1 D y $end
$upscope $end
$scope module t18 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var reg 1 G y $end
$upscope $end
$scope module t19 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var reg 1 J y $end
$upscope $end
$scope module t2 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var reg 1 M y $end
$upscope $end
$scope module t20 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var reg 1 P y $end
$upscope $end
$scope module t21 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var reg 1 S y $end
$upscope $end
$scope module t22 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var reg 1 V y $end
$upscope $end
$scope module t23 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var reg 1 Y y $end
$upscope $end
$scope module t24 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var reg 1 \ y $end
$upscope $end
$scope module t25 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var reg 1 _ y $end
$upscope $end
$scope module t26 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var reg 1 b y $end
$upscope $end
$scope module t27 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var reg 1 e y $end
$upscope $end
$scope module t28 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var reg 1 h y $end
$upscope $end
$scope module t29 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var reg 1 k y $end
$upscope $end
$scope module t3 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var reg 1 n y $end
$upscope $end
$scope module t30 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var reg 1 q y $end
$upscope $end
$scope module t31 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var reg 1 t y $end
$upscope $end
$scope module t4 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var reg 1 w y $end
$upscope $end
$scope module t5 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var reg 1 z y $end
$upscope $end
$scope module t6 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var reg 1 } y $end
$upscope $end
$scope module t7 $end
$var wire 1 ~ a $end
$var wire 1 !" b $end
$var reg 1 "" y $end
$upscope $end
$scope module t8 $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var reg 1 %" y $end
$upscope $end
$scope module t9 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var reg 1 (" y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1("
1'"
0&"
1%"
1$"
0#"
1""
1!"
0~
1}
1|
0{
1z
1y
0x
1w
1v
0u
1t
1s
0r
1q
1p
0o
1n
1m
0l
1k
1j
0i
1h
1g
0f
1e
1d
0c
1b
1a
0`
1_
1^
0]
1\
1[
0Z
1Y
1X
0W
1V
1U
0T
1S
1R
0Q
1P
1O
0N
0M
1L
1K
1J
1I
0H
1G
1F
0E
1D
1C
0B
1A
1@
0?
1>
1=
0<
1;
1:
09
18
17
06
15
14
03
12
11
00
1/
1.
0-
0,
0+
0*
0)
1(
1'
b11111111111111111111111111111000 &
b11111111111111111111111111111101 %
b101 $
b11111111111111111111111111111101 #
b101 "
b11111111111111111111111111111000 !
$end
#100000
