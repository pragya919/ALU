$date
	Wed Feb  3 15:43:55 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_32bit_test $end
$var wire 32 ! y [32:1] $end
$var reg 32 " a [32:1] $end
$var reg 32 # b [32:1] $end
$scope module uut $end
$var wire 32 $ a [32:1] $end
$var wire 32 % b [32:1] $end
$var wire 32 & y [32:1] $end
$var wire 33 ' c [32:0] $end
$scope module t1 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * c1 $end
$var reg 1 + c2 $end
$var reg 1 , y $end
$upscope $end
$scope module t10 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / c1 $end
$var reg 1 0 c2 $end
$var reg 1 1 y $end
$upscope $end
$scope module t11 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 c1 $end
$var reg 1 5 c2 $end
$var reg 1 6 y $end
$upscope $end
$scope module t12 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 c1 $end
$var reg 1 : c2 $end
$var reg 1 ; y $end
$upscope $end
$scope module t13 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > c1 $end
$var reg 1 ? c2 $end
$var reg 1 @ y $end
$upscope $end
$scope module t14 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C c1 $end
$var reg 1 D c2 $end
$var reg 1 E y $end
$upscope $end
$scope module t15 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H c1 $end
$var reg 1 I c2 $end
$var reg 1 J y $end
$upscope $end
$scope module t16 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M c1 $end
$var reg 1 N c2 $end
$var reg 1 O y $end
$upscope $end
$scope module t17 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R c1 $end
$var reg 1 S c2 $end
$var reg 1 T y $end
$upscope $end
$scope module t18 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W c1 $end
$var reg 1 X c2 $end
$var reg 1 Y y $end
$upscope $end
$scope module t19 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ c1 $end
$var reg 1 ] c2 $end
$var reg 1 ^ y $end
$upscope $end
$scope module t2 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a c1 $end
$var reg 1 b c2 $end
$var reg 1 c y $end
$upscope $end
$scope module t20 $end
$var wire 1 d a $end
$var wire 1 e b $end
$var wire 1 f c1 $end
$var reg 1 g c2 $end
$var reg 1 h y $end
$upscope $end
$scope module t21 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 k c1 $end
$var reg 1 l c2 $end
$var reg 1 m y $end
$upscope $end
$scope module t22 $end
$var wire 1 n a $end
$var wire 1 o b $end
$var wire 1 p c1 $end
$var reg 1 q c2 $end
$var reg 1 r y $end
$upscope $end
$scope module t23 $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u c1 $end
$var reg 1 v c2 $end
$var reg 1 w y $end
$upscope $end
$scope module t24 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 z c1 $end
$var reg 1 { c2 $end
$var reg 1 | y $end
$upscope $end
$scope module t25 $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 !" c1 $end
$var reg 1 "" c2 $end
$var reg 1 #" y $end
$upscope $end
$scope module t26 $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" c1 $end
$var reg 1 '" c2 $end
$var reg 1 (" y $end
$upscope $end
$scope module t27 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 +" c1 $end
$var reg 1 ," c2 $end
$var reg 1 -" y $end
$upscope $end
$scope module t28 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 0" c1 $end
$var reg 1 1" c2 $end
$var reg 1 2" y $end
$upscope $end
$scope module t29 $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 5" c1 $end
$var reg 1 6" c2 $end
$var reg 1 7" y $end
$upscope $end
$scope module t3 $end
$var wire 1 8" a $end
$var wire 1 9" b $end
$var wire 1 :" c1 $end
$var reg 1 ;" c2 $end
$var reg 1 <" y $end
$upscope $end
$scope module t30 $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 ?" c1 $end
$var reg 1 @" c2 $end
$var reg 1 A" y $end
$upscope $end
$scope module t31 $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 D" c1 $end
$var reg 1 E" c2 $end
$var reg 1 F" y $end
$upscope $end
$scope module t32 $end
$var wire 1 G" a $end
$var wire 1 H" b $end
$var wire 1 I" c1 $end
$var reg 1 J" c2 $end
$var reg 1 K" y $end
$upscope $end
$scope module t4 $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" c1 $end
$var reg 1 O" c2 $end
$var reg 1 P" y $end
$upscope $end
$scope module t5 $end
$var wire 1 Q" a $end
$var wire 1 R" b $end
$var wire 1 S" c1 $end
$var reg 1 T" c2 $end
$var reg 1 U" y $end
$upscope $end
$scope module t6 $end
$var wire 1 V" a $end
$var wire 1 W" b $end
$var wire 1 X" c1 $end
$var reg 1 Y" c2 $end
$var reg 1 Z" y $end
$upscope $end
$scope module t7 $end
$var wire 1 [" a $end
$var wire 1 \" b $end
$var wire 1 ]" c1 $end
$var reg 1 ^" c2 $end
$var reg 1 _" y $end
$upscope $end
$scope module t8 $end
$var wire 1 `" a $end
$var wire 1 a" b $end
$var wire 1 b" c1 $end
$var reg 1 c" c2 $end
$var reg 1 d" y $end
$upscope $end
$scope module t9 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 g" c1 $end
$var reg 1 h" c2 $end
$var reg 1 i" y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1i"
0h"
0g"
0f"
1e"
1d"
0c"
0b"
0a"
1`"
1_"
0^"
0]"
0\"
1["
1Z"
0Y"
0X"
0W"
1V"
1U"
0T"
0S"
0R"
1Q"
1P"
0O"
0N"
0M"
1L"
1K"
0J"
0I"
0H"
1G"
1F"
0E"
0D"
0C"
1B"
1A"
0@"
0?"
0>"
1="
1<"
0;"
1:"
09"
08"
17"
06"
05"
04"
13"
12"
01"
00"
0/"
1."
1-"
0,"
0+"
0*"
1)"
1("
0'"
0&"
0%"
1$"
1#"
0""
0!"
0~
1}
1|
0{
0z
0y
1x
1w
0v
0u
0t
1s
1r
0q
0p
0o
1n
1m
0l
0k
0j
1i
1h
0g
0f
0e
1d
1c
1b
1a
1`
1_
1^
0]
0\
0[
1Z
1Y
0X
0W
0V
1U
1T
0S
0R
0Q
1P
1O
0N
0M
0L
1K
1J
0I
0H
0G
1F
1E
0D
0C
0B
1A
1@
0?
0>
0=
1<
1;
0:
09
08
17
16
05
04
03
12
11
00
0/
0.
1-
0,
1+
0*
1)
1(
b110 '
b11111111111111111111111111111110 &
b11 %
b11111111111111111111111111111011 $
b11 #
b11111111111111111111111111111011 "
b11111111111111111111111111111110 !
$end
#100000
